---
- debug: msg="START junos_vlan netconf/basic.yaml on connection={{ ansible_connection
    }}"

- name: setup - remove vlan
  junipernetworks.junos.junos_vlan:
    name: test-vlan
    description: test vlan
    state: absent
    provider: '{{ netconf }}'

- name: Create vlan
  register: result
  junipernetworks.junos.junos_vlan:
    vlan_id: 100
    name: test-vlan
    state: present
    description: test vlan
    provider: '{{ netconf }}'

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'<name>test-vlan</name>' in config.xml"
      - "'<vlan-id>100</vlan-id>' in config.xml"

- name: Create vlan again (idempotent)
  register: result
  junipernetworks.junos.junos_vlan:
    vlan_id: 100
    name: test-vlan
    state: present
    description: test vlan
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == false

- name: Deactivate vlan
  register: result
  junipernetworks.junos.junos_vlan:
    vlan_id: 100
    name: test-vlan
    state: present
    active: false
    provider: '{{ netconf }}'

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'<vlan inactive=\"inactive\">' in config.xml"
      - "'<name>test-vlan</name>' in config.xml"

- name: Activate vlan
  register: result
  junipernetworks.junos.junos_vlan:
    vlan_id: 100
    name: test-vlan
    state: present
    active: true
    provider: '{{ netconf }}'

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'<name>test-vlan</name>' in config.xml"

- name: Delete vlan
  register: result
  junipernetworks.junos.junos_vlan:
    vlan_id: 100
    name: test-vlan
    state: absent
    provider: '{{ netconf }}'

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'<name>test-vlan</name>' not in config.xml"

- name: Setup vlan configuration for aggregate
  junipernetworks.junos.junos_vlan:
    aggregate:

      - vlan_id: 159
        name: test_vlan_1

      - vlan_id: 160
        name: test_vlan_2
    state: absent
    provider: '{{ netconf }}'

- name: Create vlan configuration using aggregate
  register: result
  junipernetworks.junos.junos_vlan:
    aggregate:

      - vlan_id: 159
        name: test_vlan_1

      - vlan_id: 161
        name: test_vlan_2
    description: test vlan
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\+ *test_vlan_1")
      - result.diff.prepared is search("\+ *vlan-id 159")
      - result.diff.prepared is search("\+ *vlan-id 161")
      - result.diff.prepared is search("\+ *description \"test vlan\"")

- name: Deactivate vlan configuration using aggregate
  register: result
  junipernetworks.junos.junos_vlan:
    aggregate:

      - vlan_id: 159
        name: test_vlan_1
        description: test vlan-1

      - name: test_vlan_2
    active: false
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("! *inactive[:] test_vlan_1")
      - result.diff.prepared is search("! *inactive[:] test_vlan_2")

- name: activate vlan configuration using aggregate
  register: result
  junipernetworks.junos.junos_vlan:
    aggregate:

      - vlan_id: 159
        name: test_vlan_1
        description: test vlan-1

      - name: test_vlan_2
    active: true
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("! *active[:] test_vlan_1")
      - result.diff.prepared is search("! *active[:] test_vlan_2")

- name: Delete vlan configuration using aggregate
  register: result
  junipernetworks.junos.junos_vlan:
    aggregate:

      - vlan_id: 159
        name: test_vlan_1

      - name: test_vlan_2
    state: absent
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\- *test_vlan_1")
      - result.diff.prepared is search("\- *vlan-id 159")
      - result.diff.prepared is search("\- *test_vlan_2")

- name: Delete vlan configuration using aggregate (idempotent)
  register: result
  junipernetworks.junos.junos_vlan:
    aggregate:

      - vlan_id: 159
        name: test_vlan_1

      - name: test_vlan_2
    state: absent
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == false

- debug: msg="END junos_vlan netconf/basic.yaml on connection={{ ansible_connection
    }}"
