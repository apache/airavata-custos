---
- debug: msg="START junos_interface netconf/basic.yaml on connection={{ ansible_connection
    }}"

- name: setup remove interface
  junipernetworks.junos.junos_interface:
    name: ge-0/0/1
    description: test-interface
    state: absent
    provider: '{{ netconf }}'

- name: Create interface
  register: result
  junipernetworks.junos.junos_interface:
    name: ge-0/0/1
    description: test-interface
    state: present
    provider: '{{ netconf }}'

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'<name>ge-0/0/1</name>' in config.xml"
      - "'<description>test-interface</description>' in config.xml"

- name: Create interface (idempotent)
  register: result
  junipernetworks.junos.junos_interface:
    name: ge-0/0/1
    description: test-interface
    state: present
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == false

- name: Deactivate interface configuration
  register: result
  junipernetworks.junos.junos_interface:
    name: ge-0/0/1
    description: test-interface
    state: present
    active: false
    provider: '{{ netconf }}'

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'<interface inactive=\"inactive\">' in config.xml"
      - "'<name>ge-0/0/1</name>' in config.xml"

- name: Activate interface configuration
  register: result
  junipernetworks.junos.junos_interface:
    name: ge-0/0/1
    description: test-interface
    state: present
    active: true
    provider: '{{ netconf }}'

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'<name>ge-0/0/1</name>' in config.xml"

- name: Configure interface attributes
  register: result
  junipernetworks.junos.junos_interface:
    name: ge-0/0/1
    description: test-interface
    state: present
    speed: 1g
    mtu: 256
    duplex: full
    provider: '{{ netconf }}'

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'<name>ge-0/0/1</name>' in config.xml"
      - "'<link-mode>full-duplex</link-mode>' in config.xml"
      - "'<mtu>256</mtu>' in config.xml"
      - "'<speed>1g</speed>' in config.xml"
      - "'<description>test-interface</description>' in config.xml"

- name: Disable interface
  register: result
  junipernetworks.junos.junos_interface:
    name: ge-0/0/1
    description: test-interface
    enabled: false
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\+ *disable")

- name: Enable interface
  register: result
  junipernetworks.junos.junos_interface:
    name: ge-0/0/1
    description: test-interface
    enabled: true
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\- *disable")

- name: Delete interface
  register: result
  junipernetworks.junos.junos_interface:
    name: ge-0/0/1
    description: test-interface
    state: absent
    provider: '{{ netconf }}'

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'<name>ge-0/0/1</name>' not in config.xml"

- name: Aggregate setup- delete interface ge-0/0/1
  register: result
  junipernetworks.junos.junos_interface:
    name: ge-0/0/1
    state: absent
    provider: '{{ netconf }}'

- name: Aggregate setup- delete interface ge-0/0/2
  register: result
  junipernetworks.junos.junos_interface:
    name: ge-0/0/2
    state: absent
    provider: '{{ netconf }}'

- name: Set interface on aggregate
  register: result
  junipernetworks.junos.junos_interface:
    aggregate:

      - name: ge-0/0/1
        description: test-interface-1
        speed: 1g
        mtu: 512

      - name: ge-0/0/2
        description: test-interface-2
        speed: 10m
        mtu: 256
    duplex: full
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\+ *ge-0/0/1")
      - result.diff.prepared is search("\+ *description test-interface-1")
      - result.diff.prepared is search("\+ *speed 1g")
      - result.diff.prepared is search("\+ *mtu 512")
      - result.diff.prepared is search("\+ *link-mode full-duplex")
      - result.diff.prepared is search("\+ *description test-interface-2")
      - result.diff.prepared is search("\+ *speed 10m")
      - result.diff.prepared is search("\+ * mtu 256")
      - result.diff.prepared is search("\+ *link-mode full-duplex")

- name: Set interface on aggregate (idempotent)
  register: result
  junipernetworks.junos.junos_interface:
    aggregate:

      - name: ge-0/0/1
        description: test-interface-1
        speed: 1g
        mtu: 512

      - name: ge-0/0/2
        description: test-interface-2
        speed: 10m
        mtu: 256
    duplex: full
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == false

- name: Disable interface on aggregate
  register: result
  junipernetworks.junos.junos_interface:
    aggregate:

      - name: ge-0/0/1

      - name: ge-0/0/2
    enabled: false
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\+ *disable")

- name: Enable interface on aggregate
  register: result
  junipernetworks.junos.junos_interface:
    aggregate:

      - name: ge-0/0/1

      - name: ge-0/0/2
    enabled: true
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\- *disable")

- name: Deactivate interface configuration on aggregate
  register: result
  junipernetworks.junos.junos_interface:
    aggregate:

      - name: ge-0/0/1
        description: test-interface-1
        speed: 1g
        mtu: 512

      - name: ge-0/0/2
        description: test-interface-2
        speed: 10m
        mtu: 256
    duplex: full
    active: false
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("! *inactive[:] ge-0/0/1")
      - result.diff.prepared is search("! *inactive[:] ge-0/0/2")

- name: Activate interface configuration on aggregate
  register: result
  junipernetworks.junos.junos_interface:
    aggregate:

      - name: ge-0/0/1
        description: test-interface-1
        speed: 1g
        mtu: 512

      - name: ge-0/0/2
        description: test-interface-2
        speed: 10m
        mtu: 256
    duplex: full
    active: true
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("! *active[:] ge-0/0/1")
      - result.diff.prepared is search("! *active[:] ge-0/0/2")

- name: Delete interface on aggregate
  register: result
  junipernetworks.junos.junos_interface:
    aggregate:

      - name: ge-0/0/1

      - name: ge-0/0/2
    state: absent
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\- *ge-0/0/1")
      - result.diff.prepared is search("\- *description test-interface-1")
      - result.diff.prepared is search("\- *speed 1g")
      - result.diff.prepared is search("\- *mtu 512")
      - result.diff.prepared is search("\- *link-mode full-duplex")
      - result.diff.prepared is search("\- *description test-interface-2")
      - result.diff.prepared is search("\- *speed 10m")
      - result.diff.prepared is search("\- * mtu 256")
      - result.diff.prepared is search("\- *link-mode full-duplex")

- name: Delete interface on aggregate (idempotent)
  register: result
  junipernetworks.junos.junos_interface:
    aggregate:

      - name: ge-0/0/1

      - name: ge-0/0/2
    state: absent
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == false

- debug: msg="END junos_interface netconf/basic.yaml on connection={{ ansible_connection
    }}"
