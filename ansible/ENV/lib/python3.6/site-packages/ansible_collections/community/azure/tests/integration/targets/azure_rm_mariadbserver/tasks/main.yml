- name: Prepare random number
  set_fact:
    rpfx: '{{ resource_group | hash(''md5'') | truncate(7, True, '''') }}{{ 1000 | random }}'
  run_once: true
- name: Create instance of MariaDB Server -- check mode
  check_mode: true
  register: output
  azure.azcollection.azure_rm_mariadbserver:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}
    sku:
      name: B_Gen5_1
      tier: Basic
    location: westus2
    storage_mb: 51200
    version: 10.2
    enforce_ssl: true
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
- name: Assert the resource instance is well created
  assert:
    that:
    - output.changed
- name: Create instance of MariaDB Server
  register: output
  azure.azcollection.azure_rm_mariadbserver:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}
    sku:
      name: B_Gen5_1
      tier: Basic
    location: westus2
    storage_mb: 51200
    version: 10.2
    enforce_ssl: true
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
- name: Assert the resource instance is well created
  assert:
    that:
    - output.changed
    - output.state == 'Ready'
- name: Create again instance of MariaDB Server
  register: output
  azure.azcollection.azure_rm_mariadbserver:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}
    sku:
      name: B_Gen5_1
      tier: Basic
    location: westus2
    storage_mb: 51200
    version: 10.2
    enforce_ssl: true
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
- name: Assert the state has not changed
  assert:
    that:
    - output.changed == false
    - output.state == 'Ready'
- name: Update instance of MariaDB Server, change storage size
  register: output
  azure.azcollection.azure_rm_mariadbserver:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}
    sku:
      name: B_Gen5_1
      tier: Basic
    location: westus2
    storage_mb: 128000
    version: 10.2
    enforce_ssl: true
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
- name: Assert the state has not changed
  assert:
    that:
    - output.changed
    - output.state == 'Ready'
- debug:
    var: output
- name: Gather facts MariaDB Server
  azure_rm_mariadbserver_facts:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}
  register: output
- name: Assert that storage size is correct
  assert:
    that:
    - output.servers[0]['storage_mb'] == 128000
- name: Create second instance of MariaDB Server
  azure.azcollection.azure_rm_mariadbserver:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}second
    sku:
      name: B_Gen5_1
      tier: Basic
    location: westus2
    storage_mb: 51200
    version: 10.2
    enforce_ssl: true
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
    tags:
      aaa: bbb
- name: Create second instance of MariaDB Server
  azure.azcollection.azure_rm_mariadbserver:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}second
    sku:
      name: B_Gen5_1
      tier: Basic
    location: westus2
    storage_mb: 51200
    version: 10.2
    enforce_ssl: true
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
    tags:
      ccc: ddd
- name: Gather facts MariaDB Server
  azure_rm_mariadbserver_facts:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}second
  register: output
- name: Assert that facts are returned
  assert:
    that:
    - output.changed == False
    - output.servers[0]['id'] != None
    - output.servers[0]['name'] != None
    - output.servers[0]['location'] != None
    - output.servers[0]['sku']['name'] != None
    - output.servers[0]['sku']['tier'] != None
    - output.servers[0]['sku']['capacity'] != None
    - output.servers[0]['version'] != None
    - output.servers[0]['user_visible_state'] != None
    - output.servers[0]['fully_qualified_domain_name'] != None
    - output.servers[0]['tags']['aaa'] == 'bbb'
    - output.servers[0]['tags']['ccc'] == 'ddd'
- name: Gather facts MariaDB Server
  azure_rm_mariadbserver_facts:
    resource_group: '{{ resource_group }}'
  register: output
- name: Assert that facts are returned
  assert:
    that:
    - output.changed == False
    - output.servers[0]['id'] != None
    - output.servers[0]['name'] != None
    - output.servers[0]['location'] != None
    - output.servers[0]['sku']['name'] != None
    - output.servers[0]['sku']['tier'] != None
    - output.servers[0]['sku']['capacity'] != None
    - output.servers[0]['version'] != None
    - output.servers[0]['user_visible_state'] != None
    - output.servers[0]['fully_qualified_domain_name'] != None
    - output.servers[1]['id'] != None
    - output.servers[1]['name'] != None
    - output.servers[1]['location'] != None
    - output.servers[1]['sku']['name'] != None
    - output.servers[1]['sku']['tier'] != None
    - output.servers[1]['sku']['capacity'] != None
    - output.servers[1]['version'] != None
    - output.servers[1]['user_visible_state'] != None
    - output.servers[1]['fully_qualified_domain_name'] != None
- name: Create instance of MariaDB Database -- check mode
  check_mode: true
  register: output
  azure.azcollection.azure_rm_mariadbdatabase:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: testdatabase
- name: Assert the resource instance is well created
  assert:
    that:
    - output.changed
- name: Create instance of MariaDB Database
  register: output
  azure.azcollection.azure_rm_mariadbdatabase:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: testdatabase
    collation: latin1_swedish_ci
    charset: latin1
- name: Assert the resource instance is well created
  assert:
    that:
    - output.changed
    - output.name == 'testdatabase'
- name: Create again instance of MariaDB Database
  register: output
  azure.azcollection.azure_rm_mariadbdatabase:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: testdatabase
    collation: latin1_swedish_ci
    charset: latin1
- name: Assert the state has not changed
  assert:
    that:
    - output.changed == false
    - output.name == 'testdatabase'
- name: Try to update database without force_update
  ignore_errors: true
  register: output
  azure.azcollection.azure_rm_mariadbdatabase:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: testdatabase
    collation: latin1_czech_ci
    charset: latin1
- name: Assert that nothing has changed
  assert:
    that:
    - output.changed == False
- name: Update instance of database using force_update
  register: output
  azure.azcollection.azure_rm_mariadbdatabase:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: testdatabase
    collation: latin1_czech_ci
    charset: latin1
    force_update: true
- name: Assert the state has changed
  assert:
    that:
    - output.changed
    - output.name == 'testdatabase'
- name: Create second instance of MariaDB Database
  azure.azcollection.azure_rm_mariadbdatabase:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: testdatabase2
- name: Gather facts MariaDB Database
  azure_rm_mariadbdatabase_facts:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: testdatabase
  register: output
- name: Assert that facts are returned
  assert:
    that:
    - output.changed == False
    - output.databases[0]['server_name'] != None
    - output.databases[0]['name'] != None
    - output.databases[0]['charset'] != None
    - output.databases[0]['collation'] != None
- name: Gather facts MariaDB Database
  azure_rm_mariadbdatabase_facts:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
  register: output
- name: Assert that facts are returned
  assert:
    that:
    - output.changed == False
    - output.databases[0]['server_name'] != None
    - output.databases[0]['name'] != None
    - output.databases[0]['charset'] != None
    - output.databases[0]['collation'] != None
    - output.databases[1]['server_name'] != None
    - output.databases[1]['name'] != None
    - output.databases[1]['charset'] != None
    - output.databases[1]['collation'] != None
- name: Delete instance of MariaDB Database -- check mode
  check_mode: true
  register: output
  azure.azcollection.azure_rm_mariadbdatabase:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: testdatabase
    state: absent
- name: Assert the state has changed
  assert:
    that:
    - output.changed
- name: Delete instance of MariaDB Database
  register: output
  azure.azcollection.azure_rm_mariadbdatabase:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: testdatabase
    state: absent
- name: Assert the state has changed
  assert:
    that:
    - output.changed
- name: Delete unexisting instance of MariaDB Database
  register: output
  azure.azcollection.azure_rm_mariadbdatabase:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: testdatabase
    state: absent
- name: Assert the state has changed
  assert:
    that:
    - output.changed == false
- name: Create instance of Firewall Rule -- check mode
  check_mode: true
  register: output
  azure.azcollection.azure_rm_mariadbfirewallrule:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: firewallrule{{ rpfx }}
    start_ip_address: 172.28.10.136
    end_ip_address: 172.28.10.138
- name: Assert the resource instance is well created
  assert:
    that:
    - output.changed
- name: Create instance of Firewall Rule
  register: output
  azure.azcollection.azure_rm_mariadbfirewallrule:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: firewallrule{{ rpfx }}
    start_ip_address: 172.28.10.136
    end_ip_address: 172.28.10.138
- name: Assert the resource instance is well created
  assert:
    that:
    - output.changed
- name: Create again instance of Firewall Rule
  register: output
  azure.azcollection.azure_rm_mariadbfirewallrule:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: firewallrule{{ rpfx }}
    start_ip_address: 172.28.10.136
    end_ip_address: 172.28.10.138
- name: Assert the state has not changed
  assert:
    that:
    - output.changed == false
- name: Delete instance of Firewall Rule -- check mode
  check_mode: true
  register: output
  azure.azcollection.azure_rm_mariadbfirewallrule:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: firewallrule{{ rpfx }}
    state: absent
- name: Assert the state has changed
  assert:
    that:
    - output.changed
- name: Create instance of Firewall Rule -- second
  register: output
  azure.azcollection.azure_rm_mariadbfirewallrule:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: firewallrule{{ rpfx }}second
    start_ip_address: 172.28.10.136
    end_ip_address: 172.28.10.138
- name: Assert the state has changed
  assert:
    that:
    - output.changed
- name: Gather facts MariaDB Firewall Rule
  azure_rm_mariadbfirewallrule_facts:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: firewallrule{{ rpfx }}
  register: output
- name: Assert that facts are returned
  assert:
    that:
    - output.changed == False
    - output.rules[0].id != None
    - output.rules[0].server_name != None
    - output.rules[0].name != None
    - output.rules[0].start_ip_address != None
    - output.rules[0].end_ip_address != None
    - output.rules | length == 1
- name: Gather facts MariaDB Firewall Rule
  azure_rm_mariadbfirewallrule_facts:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
  register: output
- name: Assert that facts are returned
  assert:
    that:
    - output.changed == False
    - output.rules[0].id != None
    - output.rules[0].server_name != None
    - output.rules[0].name != None
    - output.rules[0].start_ip_address != None
    - output.rules[0].end_ip_address != None
    - output.rules[1].id != None
    - output.rules[1].name != None
    - output.rules[1].start_ip_address != None
    - output.rules[1].end_ip_address != None
    - output.rules | length == 2
- name: Delete instance of Firewall Rule
  register: output
  azure.azcollection.azure_rm_mariadbfirewallrule:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: firewallrule{{ rpfx }}
    state: absent
- name: Assert the state has changed
  assert:
    that:
    - output.changed
- name: Delete unexisting instance of Firewall Rule
  register: output
  azure.azcollection.azure_rm_mariadbfirewallrule:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: firewallrule{{ rpfx }}
    state: absent
- name: Assert the state has changed
  assert:
    that:
    - output.changed == false
- name: Delete instance of Firewall Rule - second
  azure.azcollection.azure_rm_mariadbfirewallrule:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: firewallrule{{ rpfx }}second
    state: absent
- name: Gather facts MariaDB Firewall Rule
  azure_rm_mariadbfirewallrule_facts:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: firewallrule{{ rpfx }}
  register: output
- name: Assert that empty list was returned
  assert:
    that:
    - output.changed == False
    - output.rules | length == 0
- name: Create instance of Configuration -- check mode
  check_mode: true
  register: output
  azure.azcollection.azure_rm_mariadbconfiguration:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: event_scheduler
    value: 'ON'
- name: Assert that change was registered
  assert:
    that:
    - output.changed
- name: Try to delete default configuraion
  azure_rm_mariadbconfiguration_facts:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: event_scheduler
  register: output
- name: Get facts of event_scheduler
  debug:
    var: output
- name: Try to delete default configuraion
  register: output
  azure.azcollection.azure_rm_mariadbconfiguration:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: event_scheduler
    state: absent
- name: Assert that change was registered
  assert:
    that:
    - not output.changed
- name: Try to change default configuraion
  register: output
  azure.azcollection.azure_rm_mariadbconfiguration:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: event_scheduler
    value: 'ON'
- name: Assert that change was registered
  assert:
    that:
    - output.changed
- name: Try to change default configuration -- idempotent
  register: output
  azure.azcollection.azure_rm_mariadbconfiguration:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: event_scheduler
    value: 'ON'
- name: Assert that change was registered
  assert:
    that:
    - not output.changed
- name: Try to reset configuration
  register: output
  azure.azcollection.azure_rm_mariadbconfiguration:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: event_scheduler
    state: absent
- name: Assert that change was registered
  assert:
    that:
    - output.changed
- name: Try to reset configuration -- idempotent
  register: output
  azure.azcollection.azure_rm_mariadbconfiguration:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: event_scheduler
    state: absent
- name: Assert that change was registered
  assert:
    that:
    - not output.changed
- name: Gather facts MariaDB Configuration
  azure_rm_mariadbconfiguration_facts:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
    name: event_scheduler
  register: output
- name: Assert that facts are returned
  assert:
    that:
    - output.changed == False
    - output.settings[0].id != None
    - output.settings[0].name != None
    - output.settings[0].value != None
    - output.settings[0].description != None
    - output.settings[0].source != None
    - output.settings | length == 1
- name: Gather facts MariaDB Configuration
  azure_rm_mariadbconfiguration_facts:
    resource_group: '{{ resource_group }}'
    server_name: mariadbsrv{{ rpfx }}
  register: output
- name: Assert that facts are returned
  assert:
    that:
    - output.changed == False
    - output.settings[0].id != None
    - output.settings[0].name != None
    - output.settings[0].value != None
    - output.settings[0].description != None
    - output.settings[0].source != None
    - output.settings | length > 1
- name: Delete instance of MariaDB Server -- check mode
  check_mode: true
  register: output
  azure.azcollection.azure_rm_mariadbserver:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}
    state: absent
- name: Assert the state has changed
  assert:
    that:
    - output.changed
- name: Delete instance of MariaDB Server
  register: output
  azure.azcollection.azure_rm_mariadbserver:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}
    state: absent
- name: Assert the state has changed
  assert:
    that:
    - output.changed
- name: Delete unexisting instance of MariaDB Server
  register: output
  azure.azcollection.azure_rm_mariadbserver:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}
    state: absent
- name: Assert the state has changed
  assert:
    that:
    - output.changed == false
- name: Delete second instance of MariaDB Server
  async: 400
  poll: 0
  azure.azcollection.azure_rm_mariadbserver:
    resource_group: '{{ resource_group }}'
    name: mariadbsrv{{ rpfx }}second
    state: absent
