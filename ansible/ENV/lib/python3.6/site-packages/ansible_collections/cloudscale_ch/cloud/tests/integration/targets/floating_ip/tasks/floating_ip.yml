- name: Request regional floating IP in check mode
  cloudscale_ch.cloud.floating_ip:
    name: '{{ cloudscale_resource_prefix }}-floating-ip'
    server: '{{ test01.uuid }}'
    ip_version: '{{ item.ip_version }}'
    reverse_ptr: '{{ item.reverse_ptr | default(omit) }}'
    prefix_length: '{{ item.prefix_length | default(omit) }}'
    region: '{{ cloudscale_test_region }}'
    tags:
      project: ansible-test
      stage: production
      sla: 24-7
  check_mode: true
  register: floating_ip
- name: Verify request floating IP in check mode
  assert:
    that:
      - floating_ip is changed
      - floating_ip.state == 'absent'

- name: Request regional floating IP
  cloudscale_ch.cloud.floating_ip:
    name: '{{ cloudscale_resource_prefix }}-floating-ip'
    server: '{{ test01.uuid }}'
    ip_version: '{{ item.ip_version }}'
    reverse_ptr: '{{ item.reverse_ptr | default(omit) }}'
    prefix_length: '{{ item.prefix_length | default(omit) }}'
    region: '{{ cloudscale_test_region }}'
    tags:
      project: ansible-test
      stage: production
      sla: 24-7
  register: floating_ip
- name: Verify request regional floating IP
  assert:
    that:
      - floating_ip is changed
      - floating_ip.region.slug == cloudscale_test_region
      # - (item.ip_version == 4 and floating_ip.ip | ipv4) or (item.ip_version == 6 and floating_ip.ip | ipv6)
      - floating_ip.server == test01.uuid
      - floating_ip.tags.project == 'ansible-test'
      - floating_ip.tags.stage == 'production'
      - floating_ip.tags.sla == '24-7'

- name: Request regional floating IP idempotence
  cloudscale_ch.cloud.floating_ip:
    name: '{{ cloudscale_resource_prefix }}-floating-ip'
    server: '{{ test01.uuid }}'
    ip_version: '{{ item.ip_version }}'
    reverse_ptr: '{{ item.reverse_ptr | default(omit) }}'
    prefix_length: '{{ item.prefix_length | default(omit) }}'
    region: '{{ cloudscale_test_region }}'
    tags:
      project: ansible-test
      stage: production
      sla: 24-7
  register: floating_ip_idempotence
- name: Verify request regional floating IP idempotence
  assert:
    that:
      - floating_ip_idempotence is not changed
      - floating_ip_idempotence.server == test01.uuid
      - floating_ip.region.slug == cloudscale_test_region
      - floating_ip.tags.project == 'ansible-test'
      - floating_ip.tags.stage == 'production'
      - floating_ip.tags.sla == '24-7'

- name: Request regional floating IP different IP version in check mode
  cloudscale_ch.cloud.floating_ip:
    name: '{{ cloudscale_resource_prefix }}-floating-ip'
    ip_version: '{{ 6 if item.ip_version == 4 else 4 }}'
    reverse_ptr: '{{ item.reverse_ptr | default(omit) }}'
    prefix_length: '{{ item.prefix_length | default(omit) }}'
    region: '{{ cloudscale_test_region }}'
    tags:
      project: ansible-test
      stage: production
      sla: 24-7
  register: floating_ip_version_differ
  check_mode: true
- name: Verify Request regional floating IP different IP version in check mode
  assert:
    that:
      - floating_ip_version_differ is changed
      - not floating_ip_version_differ.network

- name: Request global floating IP
  cloudscale_ch.cloud.floating_ip:
    name: '{{ cloudscale_resource_prefix }}-global-floating-ip'
    ip_version: '{{ item.ip_version }}'
    reverse_ptr: '{{ item.reverse_ptr | default(omit) }}'
    prefix_length: '{{ item.prefix_length | default(omit) }}'
    type: 'global'
  register: global_floating_ip
- name: Verify global floating IP
  assert:
    that:
      - global_floating_ip is changed
      - global_floating_ip.region == None
      - global_floating_ip.type == 'global'
      # - (item.ip_version == 4 and global_floating_ip.ip | ipv4) or (item.ip_version == 6 and global_floating_ip.ip | ipv6)
      - not global_floating_ip.server

- name: Remove global floating IP
  cloudscale_ch.cloud.floating_ip:
    ip: '{{ global_floating_ip.ip }}'
    state: 'absent'
  register: global_floating_ip
- name: Verify release of global floating IP
  assert:
    that:
      - global_floating_ip is changed
      - global_floating_ip.state == 'absent'

- name: Move floating IP to second server
  cloudscale_ch.cloud.floating_ip:
    server: '{{ test02.uuid }}'
    ip: '{{ floating_ip.ip }}'
  register: move_ip
- name: Verify move floating IPv4 to second server
  assert:
    that:
      - move_ip is changed
      - move_ip.server == test02.uuid

- name: Remove floating IP in check mode
  cloudscale_ch.cloud.floating_ip:
    ip: '{{ floating_ip.ip }}'
    state: 'absent'
  register: release_ip
  check_mode: true
- name: Verify Remove floating IP in check mode
  assert:
    that:
      - release_ip is changed
      - release_ip.state == 'present'

- name: Remove floating IP
  cloudscale_ch.cloud.floating_ip:
    ip: '{{ floating_ip.ip }}'
    state: 'absent'
  register: release_ip
- name: Verify Remove floating IP
  assert:
    that:
      - release_ip is changed
      - release_ip.state == 'absent'

- name: Remove floating IP idempotence
  cloudscale_ch.cloud.floating_ip:
    ip: '{{ floating_ip.ip }}'
    state: 'absent'
  register: release_ip
- name: Verify Remove floating IP idempotence
  assert:
    that:
      - release_ip is not changed
      - release_ip.state == 'absent'
