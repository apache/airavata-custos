---
- debug: msg="START ios_interface cli/basic.yaml on connection={{ ansible_connection
    }}"

- name: Configure interface (setup)
  register: result
  cisco.ios.ios_interface:
    name: '{{ test_interface }}'
    description: test-interface-1
    speed: 1000
    mtu: 1800
    state: present
    provider: '{{ cli }}'

- name: Configure interface
  register: result
  cisco.ios.ios_interface:
    name: '{{ test_interface }}'
    description: test-interface-initial
    state: present
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == true
      - '"interface {{ test_interface }}" in result.commands'
      - '"description test-interface-initial" in result.commands'

- name: Confgure interface (idempotent)
  register: result
  cisco.ios.ios_interface:
    name: '{{ test_interface }}'
    description: test-interface-initial
    state: present
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == false

- name: Confgure interface parameters
  register: result
  cisco.ios.ios_interface:
    name: '{{ test_interface }}'
    description: test-interface
    mtu: 2000
    state: present
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == true
      - '"interface {{ test_interface }}" in result.commands'
      - '"description test-interface" in result.commands'
      - '"mtu 2000" in result.commands'

- name: Change interface parameters
  register: result
  cisco.ios.ios_interface:
    name: '{{ test_interface }}'
    description: test-interface-1
    mtu: 1800
    state: present
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == true
      - '"interface {{ test_interface }}" in result.commands'
      - '"description test-interface-1" in result.commands'
      - '"mtu 1800" in result.commands'

- name: Disable interface
  register: result
  cisco.ios.ios_interface:
    name: '{{ test_interface }}'
    enabled: false
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == true
      - '"interface {{ test_interface }}" in result.commands'
      - '"shutdown" in result.commands'

- name: Enable interface
  register: result
  cisco.ios.ios_interface:
    name: '{{ test_interface }}'
    enabled: true
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == true
      - '"interface {{ test_interface }}" in result.commands'
      - '"no shutdown" in result.commands'

- name: Confgure second interface (setup)
  register: result
  cisco.ios.ios_interface:
    name: '{{ test_interface2 }}'
    description: test-interface-initial
    speed: 1000
    mtu: 1800
    state: present
    provider: '{{ cli }}'

- name: Add interface aggregate
  register: result
  cisco.ios.ios_interface:
    aggregate:

      - name: '{{ test_interface }}'
        mtu: 2000
        description: test-interface-1

      - name: '{{ test_interface2 }}'
        mtu: 2000
        description: test-interface-2
    speed: 1000
    state: present
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == true
      - '"interface {{ test_interface }}" in result.commands'
      - '"mtu 2000" in result.commands'
      - '"interface {{ test_interface2 }}" in result.commands'
      - '"description test-interface-2" in result.commands'
      - '"mtu 2000" in result.commands'

- name: Add interface aggregate (idempotent)
  register: result
  cisco.ios.ios_interface:
    aggregate:

      - name: '{{ test_interface }}'
        mtu: 2000
        description: test-interface-1

      - name: '{{ test_interface2 }}'
        mtu: 2000
        description: test-interface-2
    speed: 1000
    state: present
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == false

- name: Disable interface aggregate
  register: result
  cisco.ios.ios_interface:
    aggregate:

      - name: '{{ test_interface }}'

      - name: '{{ test_interface2 }}'
    enabled: false
    state: present
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == true
      - '"interface {{ test_interface }}" in result.commands'
      - '"shutdown" in result.commands'
      - '"interface {{ test_interface2 }}" in result.commands'
      - '"shutdown" in result.commands'

- name: Enable interface aggregate
  register: result
  cisco.ios.ios_interface:
    aggregate:

      - name: '{{ test_interface }}'

      - name: '{{ test_interface2 }}'
    enabled: true
    state: present
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == true
      - '"interface {{ test_interface }}" in result.commands'
      - '"no shutdown" in result.commands'
      - '"interface {{ test_interface2 }}" in result.commands'
      - '"no shutdown" in result.commands'

- name: loopback interface setup
  cisco.ios.ios_interface:
    aggregate:

      - name: Loopback9

      - name: Loopback10
    state: absent
    provider: '{{ cli }}'

- name: Create loopback interface aggregate
  register: result
  cisco.ios.ios_interface:
    aggregate:

      - name: Loopback9

      - name: Loopback10
    state: present
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == true
      - '"interface Loopback9" in result.commands'
      - '"interface Loopback10" in result.commands'

- name: Delete loopback interface aggregate
  register: result
  cisco.ios.ios_interface:
    aggregate:

      - name: Loopback9

      - name: Loopback10
    state: absent
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == true
      - '"no interface Loopback9" in result.commands'
      - '"no interface Loopback10" in result.commands'

- name: Delete loopback interface aggregate (idempotent)
  register: result
  cisco.ios.ios_interface:
    aggregate:

      - name: Loopback9

      - name: Loopback10
    state: absent
    provider: '{{ cli }}'

- assert:
    that:
      - result.changed == false

- debug: msg="END ios_interface cli/basic.yaml on connection={{ ansible_connection
    }}"
