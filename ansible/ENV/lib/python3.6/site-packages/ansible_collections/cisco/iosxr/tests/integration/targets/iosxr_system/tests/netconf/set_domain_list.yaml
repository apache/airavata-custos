---
- debug:
    msg: START netconf/set_domain_search.yaml on connection={{ ansible_connection
      }}

- name: setup
  connection: ansible.netcommon.network_cli
  cisco.iosxr.iosxr_config:
    lines:
      - no domain list ansible.com
      - no domain list redhat.com
      - no domain list eng.ansible.com
      - no domain vrf ansiblevrf list redhat.com
      - no domain vrf ansiblevrf list ansible.com
    match: none
    provider: '{{ cli }}'

- name: configure domain_search
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system:
    domain_search:
      - ansible.com
      - redhat.com
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'ansible.com' in result.xml[0]"
      - "'redhat.com' in result.xml[0]"

- name: configure domain_search with vrf
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system: &id001
    vrf: ansiblevrf
    domain_search:
      - redhat.com
      - ansible.com
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'ansiblevrf' in result.xml[0]"
      - "'ansible.com' in result.xml[0]"
      - "'redhat.com' in result.xml[0]"

- name: verify domain_search with vrf
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system: *id001

- assert:
    that:
      - result.changed == false

- name: delete domain_search with vrf
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system: &id002
    vrf: ansiblevrf
    domain_search:
      - redhat.com
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'ansiblevrf' in result.xml[0]"
      - "'ansible.com' in result.xml[0]"

- name: verify delete domain_search with vrf
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system: *id002

- assert:
    that:
      - result.changed == false

- name: remove one entry
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system:
    domain_search:
      - ansible.com
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'redhat.com' in result.xml[0]"

- name: verify remove one entry
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system:
    domain_search:
      - ansible.com
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == false

- name: add one entry
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system:
    domain_search:
      - ansible.com
      - redhat.com
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'redhat.com' in result.xml[0]"

- name: verify add one entry
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system:
    domain_search:
      - ansible.com
      - redhat.com
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == false

- name: add and remove one entry
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system:
    domain_search:
      - ansible.com
      - eng.ansible.com
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == true
      - "'redhat.com' in result.xml[1]"
      - "'eng.ansible.com' in result.xml[0]"
      - result.xml|length == 2

- name: verify add and remove one entry
  connection: ansible.netcommon.netconf
  register: result
  cisco.iosxr.iosxr_system:
    domain_search:
      - ansible.com
      - eng.ansible.com
    provider: '{{ netconf }}'

- assert:
    that:
      - result.changed == false

- name: teardown
  connection: ansible.netcommon.network_cli
  cisco.iosxr.iosxr_config:
    lines:
      - no domain list ansible.com
      - no domain list redhat.com
      - no domain list eng.ansible.com
      - no domain vrf ansiblevrf list redhat.com
      - no domain vrf ansiblevrf list ansible.com
      - no domain vrf ansiblevrf list eng.ansible.com
    match: none
    provider: '{{ cli }}'

- debug:
    msg: END netconf/set_domain_search.yaml on connection={{ ansible_connection
      }}
