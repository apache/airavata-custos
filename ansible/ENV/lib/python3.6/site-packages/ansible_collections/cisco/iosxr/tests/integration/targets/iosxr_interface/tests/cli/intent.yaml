---
- debug: msg="START iosxr_interface cli/intent.yaml on connection={{ ansible_connection
    }}"

- name: Setup (interface is up)
  register: result
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/1
    description: test_interface_1
    enabled: true
    state: present
    provider: '{{ cli }}'

- name: Check intent arguments
  register: result
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/1
    state: up
    delay: 20
    provider: '{{ cli }}'

- assert:
    that:
      - result.failed == false

- name: Check intent arguments (failed condition)
  ignore_errors: true
  register: result
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/1
    state: down
    provider: '{{ cli }}'

- assert:
    that:
      - result.failed == true
      - "'state eq(down)' in result.failed_conditions"

- name: Config + intent
  register: result
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/1
    enabled: false
    state: down
    delay: 20
    provider: '{{ cli }}'

- assert:
    that:
      - result.failed == false

- name: Config + intent (fail)
  ignore_errors: true
  register: result
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/1
    enabled: false
    state: up
    provider: '{{ cli }}'

- assert:
    that:
      - result.failed == true
      - "'state eq(up)' in result.failed_conditions"

- name: Aggregate config + intent (pass)
  ignore_errors: true
  register: result
  cisco.iosxr.iosxr_interface:
    aggregate:

      - name: GigabitEthernet0/0/0/1
        enabled: true
        state: up
        delay: 20
    provider: '{{ cli }}'

- assert:
    that:
      - result.failed == false
